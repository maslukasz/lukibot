import hikari
import lightbulb
import miru

import aiomysql

con = await aiomysql.connect(user='bot', password='bot', host='localhost', database='thendbot')
c = await con.cursor()
c2 = await con.cursor()
c3 = await con.cursor()
c4 = await con.cursor()
c5 = await con.cursor()
c6 = await con.cursor()

user_plugin = lightbulb.Plugin("Rawki", "Plugin z gotowymi komendami")

class ProfilView(miru.View):
    @miru.button(label=" ", emoji='üè†', style=hikari.ButtonStyle.SUCCESS)
    async def home_button(self, button: miru.Button, ctx: miru.Context) -> None:
        await c.execute(f"SELECT xp, level, money, about FROM userdata WHERE userid = {ctx.member.id}")
        r = await c.fetchone()

        await ctx.edit_response(hikari.Embed(title=f'Strona g≈Ç√≥wna',
        description=f"""<:kropka:756964971300257814> **Stan konta**: `{r[2]}` <:thend:742800976636936202>
<:kropka:756964971300257814> **Poziom**: `{r[1]}` (`{r[0]}` XP)

Opis:
{r[3]}""", colour='4F545C'))

    @miru.button(label="Statystyki", emoji='üìä', style=hikari.ButtonStyle.SECONDARY)
    async def statystyki_button(self, button: miru.Button, ctx: miru.Context) -> None:
        # ≈ÅƒÖczna ilo≈õƒá wiadomo≈õci
        await c.execute(f"SELECT SUM(messages) FROM history_users WHERE userid = {ctx.member.id}")
        r = await c.fetchone()
        
        # Wiadomo≈õci z ostatnich 7 dni
        await c2.execute(f"SELECT SUM(messages) FROM history_users WHERE userid = {ctx.member.id} AND data BETWEEN DATE_ADD(now(), INTERVAL -7 day) AND date(now())")
        r2 = await c2.fetchone()

        await c3.execute(f"SELECT channel, messages, data FROM history_users WHERE userid = {ctx.member.id} GROUP BY messages ORDER BY messages DESC")
        r3 = await c3.fetchall()
        
        await c4.execute(f"SELECT SUM(messages), channel, data FROM history_users WHERE userid = {ctx.member.id} GROUP BY messages")
        r4 = await c4.fetchall()

        await ctx.edit_response(hikari.Embed(title=f'Statystyki {ctx.member}',
        description=f"""üèÖ **Serwerowe**
<:kropka:756964971300257814> Tytu≈Çy U≈ºytkownika Tygodnia: `brak`.
<:kropka:756964971300257814> Tytu≈Çy U≈ºytkownika MiesiƒÖca: `brak`.
~~<:kropka:756964971300257814> Wykonane questy: `brak`.~~ Questy nie sƒÖ jeszcze dodane do bota.
<:kropka:756964971300257814> Wykonane partnerstwa: `brak`.

üí¨ **Twoje TOP 3 kana≈Çy przez ostatnie 7 dni**
<:kropka:756964971300257814> <#{r3[0][0]}> **{r3[0][1]}** wiadomo≈õci
<:blurpledot:925702134467551273> <#{r3[1][0]}> **{r3[1][1]}** wiadomo≈õci
<:blurpledot:925702134467551273> <#{r3[0][0]}> **{r3[0][1]}** wiadomo≈õci

üìÇ **Dodatkowe**
<:kropka:756964971300257814> ≈ÅƒÖcznie napisane wiadomo≈õci: `{r[0]}`
<:kropka:756964971300257814> Dzie≈Ñ, w kt√≥rym napisano najwiƒôcej wiadomo≈õci: `{r3[0][2]}` (**{r3[0][1]}** wiadomo≈õci)
<:kropka:756964971300257814> Wiadomo≈õci przez ostatnie 7 dni: `{r2[0]}`
<:kropka:756964971300257814> Najbardziej aktywny kana≈Ç: <#{r4[0][1]}> (`{r4[0][0]}` wiadomo≈õci)
<:kropka:756964971300257814> Na ilu ≈ÇƒÖcznie kana≈Çach zosta≈Ça wys≈Çana przynajmniej 1 wiadomo≈õƒá: `{len(r3)}`""".replace('None', "WystƒÖpi≈Ç b≈ÇƒÖd z Twoimi danymi. Albo za ma≈Ço tu pisa≈Çe≈õ/-a≈õ, albo co≈õ siƒô wywali≈Ço. Je≈õli b≈ÇƒÖd bƒôdzie siƒô powtarza≈Ç, to napisz do administracji."), colour='4F545C'))

@user_plugin.command
@lightbulb.command("profil", "raw group", aliases=['prof', 'profile'])
@lightbulb.implements(lightbulb.PrefixCommand)
async def profil(ctx: lightbulb.Context) -> None:
    await c.execute(f"SELECT xp, level, money, about FROM userdata WHERE userid = {ctx.author.id}")
    r = await c.fetchone()

    view = ProfilView()
    resp = await ctx.respond(hikari.Embed(title=f'Strona g≈Ç√≥wna',
    description=f"""<:kropka:756964971300257814> **Stan konta**: `{r[2]}` <:thend:742800976636936202>
<:kropka:756964971300257814> **Poziom**: `{r[1]}` (`{r[0]}` XP)

Opis:
{r[3]}""", colour='#4F545C'), components=view.build())
    message = await resp.message()
    view.start(message)
    await view.wait()
        

def load(bot):
    bot.add_plugin(user_plugin)

def unload(bot):
    bot.remove_plugin(user_plugin)
